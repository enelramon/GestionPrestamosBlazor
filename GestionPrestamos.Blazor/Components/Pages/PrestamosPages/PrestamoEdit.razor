@page "/Prestamo/Edit/{PrestamoId:int}"
@using Microsoft.EntityFrameworkCore

@inject PrestamosService prestamosService
@inject DeudoresService deudoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

@*HTML*@
<PageTitle>Modificar</PageTitle>
<EditForm Model="Prestamo" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Modificar Prestamo</h5>
            </div>

            <div class="card-body">
                @*Deudor*@
                <div class="mb-3">
                    <label class="form-label"><strong>Deudor</strong></label>
                        <InputSelect class="form-control" @bind-Value="Prestamo.DeudorId">
                            <option value="" selected disabled>Elija una opci&oacute;n</option>
                            @foreach (var deudor in ListaDeudores)
                            {
                                <option value="@deudor.DeudorId">@deudor.Nombres</option>
                            }
                    </InputSelect>
                    <ValidationMessage For="(() => Prestamo.Deudor)" />
                </div>
                @*Concepto*@
                <div class="mb-3">
                    <label class="form-label"><strong>Concepto</strong></label>
                    <InputText class="form-control" @bind-Value="Prestamo.Concepto"></InputText>
                    <ValidationMessage For="(() => Prestamo.Concepto)" />
                </div>
                @*Monto*@
                <div class="mb-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control" @bind-Value="Prestamo.Monto"></InputNumber>
                    <ValidationMessage For="(() => Prestamo.Monto)" />
                </div>
            </div>

            @*footer*@
            <div class="card-footer text-center mt-2">
                <a href="/Prestamo/Index" class="btn btn-secondary"> <span class="bi bi-arrow-left"></span> Volver</a>
                <Toasts class="p-3" Messages="messages" AutoHide="true" StackLength="3" Placement="ToastsPlacement.TopRight" />
                <button type="submit" class="btn btn-primary bi bi-floppy" @onclick="Modificar"> Modificar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int PrestamoId { get; set; }

    public Prestamos Prestamo { get; set; } = new Prestamos();
    public string Mensaje { get; set; } = string.Empty;
    public List<Deudores> ListaDeudores { get; set; } = new List<Deudores>();

    protected override async Task OnInitializedAsync()
    {
        Prestamo = await prestamosService.Buscar(PrestamoId);
        ListaDeudores = await deudoresService.Listar(d => d.DeudorId > 0);

    }

    private readonly List<ToastMessage> messages = new List<ToastMessage>();

    private void ShowMessage(ToastType toastType) => messages.Add(CreateToastMessage(toastType));

    private ToastMessage CreateToastMessage(ToastType toastType)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Blazor Bootstrap",
            HelpText = $"{DateTime.Now}",
            Message = Mensaje,
        };

    public async Task Modificar()
    {
        var creado = await prestamosService.Guardar(Prestamo);

        if (creado)
        {
            Mensaje = "Modificado correctamente";
            ShowMessage(ToastType.Success);
            Volver();
        }
        else
        {
            Mensaje = "No se ha modificado correctamente";
            ShowMessage(ToastType.Danger);
        }

    }

    public async Task Volver()
    {
        await Task.Delay(3000);
        navigationManager.NavigateTo("/Prestamo/Index");
    }
}